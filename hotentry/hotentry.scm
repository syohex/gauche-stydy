#!/usr/bin/env gosh
(use rfc.http)
(use rfc.uri)
(use srfi-13)
(use sxml.ssax)
(use gauche.parseopt)
(use gauche.sequence)

(define (hotentry-url keyword threshold)
  (format #f "http://b.hatena.ne.jp/search/tag?q=~a&users=~d&mode=rss" keyword threshold))

(define (get-rss url)
  (receive (_ _ hostname _ path query _) (uri-parse url)
    (receive (code heaaders body) (http-get hostname (string-concatenate (list path "?" query)))
      (unless (string=? code "200")
        (error "Can't download " url))
      body)))

(define (main args)
  (let-args (cdr args)
      ((threshold "t|threshold=i" 3)
       . restargs)
    (when (null? restargs)
      (format #t "Usage: hotentry.scm [-t threshold] keyword\n")
      (exit 0))
    (let* ((keyword (car restargs))
           (rss (get-rss (hotentry-url keyword threshold)))
           (xml (ssax:xml->sxml (open-input-string rss) '()))
           (items (cddr (caddr xml)))
           (index 1))
      (map
       (lambda (item)
         (let ((title (cadr (assoc 'http://purl.org/rss/1.0/:title (cdr item)))))
           (format #t "[~2@a] ~a\n" index title)
           (inc! index)))
       (subseq items 0 10)))))
